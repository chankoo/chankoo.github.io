<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>기타 on chankoo</title>
    <link>https://chankoo.github.io/categories/%EA%B8%B0%ED%83%80/</link>
    <description>Recent content in 기타 on chankoo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 13 Oct 2022 17:03:36 +0900</lastBuildDate><atom:link href="https://chankoo.github.io/categories/%EA%B8%B0%ED%83%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>구글 태그 매니저</title>
      <link>https://chankoo.github.io/posts/%EA%B5%AC%EA%B8%80-%ED%83%9C%EA%B7%B8-%EB%A7%A4%EB%8B%88%EC%A0%80/</link>
      <pubDate>Thu, 13 Oct 2022 17:03:36 +0900</pubDate>
      
      <guid>https://chankoo.github.io/posts/%EA%B5%AC%EA%B8%80-%ED%83%9C%EA%B7%B8-%EB%A7%A4%EB%8B%88%EC%A0%80/</guid>
      <description>
        
          
            content GTM 태그(어플리케이션에 삽입하여 이벤트를 전송하는 코드)를 관리하는 역할을 한다. 태그가 전송한 데이터를 분석하는 툴과는 별개이다.
refs links 
          
          
        
      </description>
    </item>
    
    <item>
      <title>postback</title>
      <link>https://chankoo.github.io/posts/postback/</link>
      <pubDate>Thu, 06 Oct 2022 00:01:42 +0900</pubDate>
      
      <guid>https://chankoo.github.io/posts/postback/</guid>
      <description>
        
          
            content 광고 매체를 통해 유입된 어플리케이션 유저의 데이터를 다시 광고 매체로 돌려주는 일. 보통 어플리케이션 제공자 입장에서 postback 기능이 있는 솔루션(MMP)가 필요한데, 1) 유저 데이터를 가지고 이용중인 광고를 최적화 하려는 목적과 2) 광고 매체 마다 API 스펙이 제각각이어서 대응이 어려운 문제 때문이다.
refs links webhook 
          
          
        
      </description>
    </item>
    
    <item>
      <title>제텔카스텐</title>
      <link>https://chankoo.github.io/posts/%EC%A0%9C%ED%85%94%EC%B9%B4%EC%8A%A4%ED%85%90/</link>
      <pubDate>Sun, 02 Oct 2022 22:59:24 +0900</pubDate>
      
      <guid>https://chankoo.github.io/posts/%EC%A0%9C%ED%85%94%EC%B9%B4%EC%8A%A4%ED%85%90/</guid>
      <description>
        
          
            content 생각 정리를 위한 제텔카스텐 cherry-pick
가억과 생각을 탐색하는 자료구조
노트 작성 원칙
atomic한 아이디어를 노트로 작성한다. 임시 노트를 작성하고 영구 노트로 옮긴다. 노트 간 연결은 많을수록 좋다. 영구 노트 작성 원칙
내 글로 다시 쓴다. 출판을 전제로 쓴다. 분량을 제한한다. 페이지 작성법
영구 노트의 글감을 정리하여 한 편의 글을 쓴다. Cmd + Shift + E 단축키로 로컬 디렉토리(pages)에 내보낸다. pages/deploy.sh 로 publish 한다. refs 4. 옵시디안은 제텔카스텐을 위해 태어났다. 제텔카스텐 개념과 기본 세팅[한글 자막] - YouTube links 노트 템플릿 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
