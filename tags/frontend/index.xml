<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>frontend on chankoo</title>
    <link>https://chankoo.github.io/tags/frontend/</link>
    <description>Recent content in frontend on chankoo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 08 Nov 2023 10:00:42 +0900</lastBuildDate><atom:link href="https://chankoo.github.io/tags/frontend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Client-side Navigation</title>
      <link>https://chankoo.github.io/posts/client-side-navigation/</link>
      <pubDate>Wed, 08 Nov 2023 10:00:42 +0900</pubDate>
      
      <guid>https://chankoo.github.io/posts/client-side-navigation/</guid>
      <description>
        
          
            Next.js 의 페이지 간 이동을 client-side에서 처리하는 것을 의미한다
a 태그를 사용한 전통적인 라우팅과 달리, full page reload 를 (당연히) 하지 않고, 링크가 있으면 prefetching 하여 필요한 데이터(js 파일)를 미리 받아오며, 자체적으로 code splitting과 cache, partial-rendering 을 통해 사용성을 높이는 이점이 있다.
refs links 
          
          
        
      </description>
    </item>
    
    <item>
      <title>MVVM</title>
      <link>https://chankoo.github.io/posts/mvvm/</link>
      <pubDate>Mon, 03 Oct 2022 13:02:32 +0900</pubDate>
      
      <guid>https://chankoo.github.io/posts/mvvm/</guid>
      <description>
        
          
            content View -&amp;gt; ViewModel -&amp;gt; Model 의 구조. View 를 그리기 위한 데이터와 비즈니스 로직을 ViewModel에 모두 담아 View와 Model 결합을 끊는다. MVC(UIKit) 를 이용하던 iOS 개발의 대세 흐름이 MVVM(SwiftUI)을 이용하는 것으로 변했는데, MVC에 비해 각 계층이 더 잘 분리되어 유지보수와 테스트가 더 용이하다. MVVM은 View가 ViewModel을, ViewModel이 Model을 소유하는 방식인데, MVC의 ViewController가 Model과 View를 모두 떠맡아 비대해지는 이슈를 해결하는 구조이다. 화면을 VC 단위로 구성하는 것이 아니라, View가 필요한 비즈니스 로직(ViewModel)을 가져와 사용하는 것이다.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
