<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>컴포넌트 on chankoo</title>
    <link>https://chankoo.github.io/tags/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8/</link>
    <description>Recent content in 컴포넌트 on chankoo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 20 Dec 2023 13:33:35 +0900</lastBuildDate><atom:link href="https://chankoo.github.io/tags/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>컴포넌트 설계 원칙</title>
      <link>https://chankoo.github.io/posts/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%84%A4%EA%B3%84-%EC%9B%90%EC%B9%99/</link>
      <pubDate>Wed, 20 Dec 2023 13:33:35 +0900</pubDate>
      
      <guid>https://chankoo.github.io/posts/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%84%A4%EA%B3%84-%EC%9B%90%EC%B9%99/</guid>
      <description>
        
          
            content 응집도 높은 컴포넌트를 설계하려면, 1) REP 2) CCP 3) CRP 원칙을 기억해야한다. 세 원칙은 상충하기에 설계 목적에 따라 세 원칙간 균형을 잡아야한다. 컴포넌트의 결합을 잘 설계하려면, 1) ADP 2) SDP 3) SAP 를 이해해야한다. ADP(Acyclic Dependencies Principle)은 컴포넌트 간 의존성이 순환하지 않도록 하여 컴포넌트 간 의존을 끊는 최소한의 규칙이고, SDP(Stable Dependencies Principle)은 안정된(변화가 적은) 모듈이 불안정한(변화가 많은) 모듈에 의존하지 않도록 설계하는 규칙이다. 그리고 SAP(Stable Abstraction Principle)는 안정성과 추상화 정도 사이의 관계를 정의하는데, 불안한(변경이 잦은, 다른 컴포넌트에 많이 의존하고 있는) 컴포넌트는 구체적이어도 괜찮지만, 안정적인(변경이 적은, 다른 컴포넌트가 많이 의존하는) 컴포넌트는 추상화하여 쉽게 확장 가능하도록 해야한다.
          
          
        
      </description>
    </item>
    
    <item>
      <title>CRP</title>
      <link>https://chankoo.github.io/posts/crp/</link>
      <pubDate>Mon, 31 Oct 2022 22:37:28 +0900</pubDate>
      
      <guid>https://chankoo.github.io/posts/crp/</guid>
      <description>
        
          
            content 공통 재사용 원칙; Common Reuse Principle 컴포넌트의 요소가 공통적으로 재사용하는 모듈만 컴포넌트에 포함하라.
컴포넌트 속 모듈(A)은 사실상 해당 컴포넌트의 모든 모듈과 의존성을 지닌다고 할 수 있다. 다른 모듈이 A에 직접 의존하지 않는다고해도, A의 변경으로 다른 모듈에 변화(재컴파일, 재검증, 재배포)가 발생할 가능성이 있어서 그렇다. 그래서 CRP는 컴포넌트 내 모듈과 강하게 결합하지 않는 모듈(A)을 컴포넌트에 위치시키지 말라고 조언하는 배제의 원칙으로서 기능한다.
refs 클린 아키텍처 links 컴포넌트 
          
          
        
      </description>
    </item>
    
    <item>
      <title>CCP</title>
      <link>https://chankoo.github.io/posts/ccp/</link>
      <pubDate>Mon, 31 Oct 2022 22:12:39 +0900</pubDate>
      
      <guid>https://chankoo.github.io/posts/ccp/</guid>
      <description>
        
          
            content 공통 폐쇄 원칙; Common Closure Principle 컴포넌트는 변경에 대해 닫혀있는 수준이 공통적이어야한다. 즉, 컴포넌트 변경하는 이벤트는 동일한 시점에 동일한 사유로 발생해야하며, 그 외 이벤트로는 변경이 불가해야한다.
하나의 모듈이 하나의 액터만 책임진다는 SRP의 컴포넌트 수준 원칙이다. 변경 사유가 다른 모듈은 별개 컴포넌트로 분리해야한다,
OCP 의 Closure와 동일한 의미의 닫혀있음이다.
refs 클린 아키텍처 links 컴포넌트 SRP OCP 
          
          
        
      </description>
    </item>
    
    <item>
      <title>REP</title>
      <link>https://chankoo.github.io/posts/rep/</link>
      <pubDate>Mon, 31 Oct 2022 22:06:07 +0900</pubDate>
      
      <guid>https://chankoo.github.io/posts/rep/</guid>
      <description>
        
          
            content 재사용/ 릴리즈 등가 원칙; Reuse/ Release Equivalence Principle 재사용 단위는 릴리즈 단위와 같아야한다. 즉, 릴리즈 단위인 컴포넌트는 같은 목적으로 재사용 하는 모듈들로 구성해야한다.
refs 클린 아키텍처 links 컴포넌트 
          
          
        
      </description>
    </item>
    
    <item>
      <title>컴포넌트</title>
      <link>https://chankoo.github.io/posts/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8/</link>
      <pubDate>Thu, 27 Oct 2022 22:23:37 +0900</pubDate>
      
      <guid>https://chankoo.github.io/posts/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8/</guid>
      <description>
        
          
            런타임에 소프트웨어를 구성하는 요소. (컴파일 언어의 경우) 실행 가능한 바이너리 형태이며, 코드로 확인 가능한 모듈과 달리 가시성이 없다.
(잘 설계한다면)컴포넌트는 독립적으로 배포 가능한 단위이다. 시스템은 컴포넌트 단위로 쪼개지며, 각 컴포넌트는 다른 컴포넌트에 영향 주지 않고 개발, 배포한다.
refs 개발자에서 아키텍트로 클린 아키텍처 links 모듈 컴포넌트 설계 원칙 
          
          
        
      </description>
    </item>
    
    <item>
      <title>클린 아키텍처</title>
      <link>https://chankoo.github.io/posts/%ED%81%B4%EB%A6%B0-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98/</link>
      <pubDate>Tue, 04 Oct 2022 21:43:18 +0900</pubDate>
      
      <guid>https://chankoo.github.io/posts/%ED%81%B4%EB%A6%B0-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98/</guid>
      <description>
        
          
            refs links 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
